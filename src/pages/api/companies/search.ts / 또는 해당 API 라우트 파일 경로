import type { NextApiRequest, NextApiResponse } from 'next';
import { searchCompany } from '@/lib/services/companyService'; // 경로 확인 필요

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  // 1. 요청 수신 로그
  console.log('API /api/companies/search received request');

  if (req.method !== 'GET') {
    console.log('Method not allowed:', req.method);
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  const { keyword } = req.query;

  // 2. 검색어 확인 로그
  console.log('Search keyword:', keyword);

  if (!keyword || typeof keyword !== 'string') {
    console.log('Invalid keyword');
    return res.status(400).json({ message: '검색어를 입력해주세요.' });
  }

  try {
    // 3. searchCompany 함수 호출 전 로그
    console.log(`Calling searchCompany with keyword: ${keyword}`);

    const companies = await searchCompany(keyword);

    // 4. searchCompany 함수 호출 성공 로그
    console.log(`searchCompany returned ${companies.length} results`);

    res.status(200).json(companies);

  } catch (error: unknown) {
    // 5. 에러 발생 시 상세 로그 (가장 중요!)
    console.error('Error in /api/companies/search handler:', error);

    // 에러 객체의 상세 정보 로깅 시도
    if (error instanceof Error) {
      console.error('Error name:', error.name);
      console.error('Error message:', error.message);
      console.error('Error stack:', error.stack);
    } else {
      console.error('Caught a non-Error object:', error);
    }

    res.status(500).json({ message: '회사 검색 중 서버 오류가 발생했습니다.' });
  }
} 